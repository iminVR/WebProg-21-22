// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScooterRentalProject.DatabaseContext;

namespace ScooterRentalProject.Migrations
{
    [DbContext(typeof(ScooterRentalDbContext))]
    [Migration("20220209201717_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ProjekatWP.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("customerID")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customerName");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ProjekatWP.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reservationID")
                        .UseIdentityColumn();

                    b.Property<DateTime>("RentedFrom")
                        .HasColumnType("datetime2")
                        .HasColumnName("rentedFrom");

                    b.Property<DateTime>("RentedTo")
                        .HasColumnType("datetime2")
                        .HasColumnName("rentedTo");

                    b.Property<int?>("customerFK")
                        .HasColumnType("int");

                    b.Property<int?>("scooterFK")
                        .HasColumnType("int");

                    b.Property<int?>("shopFK")
                        .HasColumnType("int");

                    b.HasKey("ReservationID");

                    b.HasIndex("customerFK");

                    b.HasIndex("scooterFK")
                        .IsUnique()
                        .HasFilter("[scooterFK] IS NOT NULL");

                    b.HasIndex("shopFK");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ProjekatWP.Models.Scooter", b =>
                {
                    b.Property<int>("ScooterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("scooterID")
                        .UseIdentityColumn();

                    b.Property<bool>("Rented")
                        .HasColumnType("bit")
                        .HasColumnName("rented");

                    b.HasKey("ScooterID");

                    b.ToTable("Scooters");
                });

            modelBuilder.Entity("ProjekatWP.Models.Shop", b =>
                {
                    b.Property<int>("ShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("shopID")
                        .UseIdentityColumn();

                    b.Property<string>("ShopName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shopName");

                    b.HasKey("ShopID");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("ProjekatWP.Models.Reservation", b =>
                {
                    b.HasOne("ProjekatWP.Models.Customer", "customer")
                        .WithMany("reservations")
                        .HasForeignKey("customerFK");

                    b.HasOne("ProjekatWP.Models.Scooter", "scooter")
                        .WithOne("reservation")
                        .HasForeignKey("ProjekatWP.Models.Reservation", "scooterFK");

                    b.HasOne("ProjekatWP.Models.Shop", "shop")
                        .WithMany("reservations")
                        .HasForeignKey("shopFK");

                    b.Navigation("customer");

                    b.Navigation("scooter");

                    b.Navigation("shop");
                });

            modelBuilder.Entity("ProjekatWP.Models.Customer", b =>
                {
                    b.Navigation("reservations");
                });

            modelBuilder.Entity("ProjekatWP.Models.Scooter", b =>
                {
                    b.Navigation("reservation");
                });

            modelBuilder.Entity("ProjekatWP.Models.Shop", b =>
                {
                    b.Navigation("reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
